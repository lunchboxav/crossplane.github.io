---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: data-api-database
spec:
  workload:
    apiVersion: database.example.org/v1alpha1
    kind: PostgreSQLInstance
    metadata:
      name: app-postgresql
    spec:
      parameters:
        storageGB: 20
      compositionSelector:
        matchLabels:
          guide: quickstart
  parameters:
  - name: database-secret
    description: Secret to which to write PostgreSQL database connection details.
    required: true
    fieldPaths:
    - spec.writeConnectionSecretToRef.name
  - name: database-provider
    description: |
      Cloud provider that should be used to create a PostgreSQL database.
      Either alibaba, aws, azure, or gcp.
    fieldPaths:
    - spec.compositionSelector.matchLabels.provider
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: data-api
spec:
  workload:
    apiVersion: core.oam.dev/v1alpha2
    kind: ContainerizedWorkload
    metadata:
      name: data-api
    spec:
      containers:
        - name: data-api
          image: artursouza/rudr-data-api:0.50
          env:
            - name: DATABASE_USER
              fromSecret:
                key: username
            - name: DATABASE_PASSWORD
              fromSecret:
                key: password
            - name: DATABASE_HOSTNAME
              fromSecret:
                key: endpoint
            - name: DATABASE_PORT
              fromSecret:
                key: port
            - name: DATABASE_NAME
              value: postgres
            - name: DATABASE_DRIVER
              value: postgresql
          ports:
            - name: http
              containerPort: 3009
              protocol: TCP
          livenessProbe:
            exec:
              command: [wget, -q, http://127.0.0.1:3009/status, -O, /dev/null, -S]
  parameters:
    - name: database-secret
      description: Secret from which to read PostgreSQL connection details.
      required: true
      fieldPaths:
        - spec.containers[0].env[0].fromSecret.name
        - spec.containers[0].env[1].fromSecret.name
        - spec.containers[0].env[2].fromSecret.name
        - spec.containers[0].env[3].fromSecret.name
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: flights-api
spec:
  workload:
    apiVersion: core.oam.dev/v1alpha2
    kind: ContainerizedWorkload
    metadata:
      name: flights-api
    spec:
      containers:
        - name: flights-api
          image: sonofjorel/rudr-flights-api:0.49  
          env:
            - name: DATA_SERVICE_URI
          ports:
            - name: http
              containerPort: 3003
              protocol: TCP
  parameters:
    - name: data-uri
      description: URI at which the data service is serving
      required: true
      fieldPaths:
      - spec.containers[0].env[0].value
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: quakes-api
spec:
  workload:
    apiVersion: core.oam.dev/v1alpha2
    kind: ContainerizedWorkload
    metadata:
      name: quakes-api
    spec:
      containers:
        - name: quakes-api
          image: sonofjorel/rudr-quakes-api:0.49   
          env:
            - name: DATA_SERVICE_URI
          ports:
            - name: http
              containerPort: 3012
              protocol: TCP
  parameters:
    - name: data-uri
      description: URI at which the data service is serving
      required: true
      fieldPaths:
      - spec.containers[0].env[0].value
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: service-tracker-ui
spec:
  workload:
    apiVersion: core.oam.dev/v1alpha2
    kind: ContainerizedWorkload
    metadata:
      name: web-ui
    spec:
      containers:
        - name: service-tracker-ui
          image: sonofjorel/rudr-web-ui:0.49   
          env:
            - name: FLIGHT_API_ROOT
            - name: WEATHER_API_ROOT
            - name: QUAKES_API_ROOT
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
  parameters:
    - name: flights-uri
      description: URI at which the flights service is serving
      required: true
      fieldPaths:
      - spec.containers[0].env[0].value
    - name: weather-uri
      description: URI at which the weather service is serving
      required: true
      fieldPaths:
      - spec.containers[0].env[1].value
    - name: quakes-uri
      description: URI at which the quakes service is serving
      required: true
      fieldPaths:
      - spec.containers[0].env[2].value
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: weather-api
spec:
  workload:
    apiVersion: core.oam.dev/v1alpha2
    kind: ContainerizedWorkload
    metadata:
      name: weather-api
    spec:
      containers:
        - name: weather-api
          image: sonofjorel/rudr-weather-api:0.49    
          env:
            - name: DATA_SERVICE_URI
          ports:
            - name: http
              containerPort: 3015
              protocol: TCP
  parameters:
    - name: data-uri
      description: URI at which the data service is serving
      required: true
      fieldPaths:
      - spec.containers[0].env[0].value
